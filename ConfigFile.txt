[NEAT]
# Use the single best individual's fitness each generation to guide progress
fitness_criterion     = max

# Stop evolving once a genome achieves a fitness of at least 100
fitness_threshold     = 300

# Each generation will have 100 genomes, balancing diversity with efficiency
pop_size              = 100

# If all species die out, do not reset; rely on existing parameters for recovery
reset_on_extinction   = False


[DefaultGenome]
# node activation options
# Nodes use the tanh function, providing smooth outputs in [-1, 1]
activation_default      = tanh

# Activation functions won't change once set
activation_mutate_rate  = 0.0

# Only tanh is available, ensuring uniformity in node behavior
activation_options      = tanh


# node aggregation options
# Inputs to each node are summed, a simple and common aggregation method
aggregation_default     = sum

# No changes in the aggregation function over time
aggregation_mutate_rate = 0.0

# Summation is the only aggregation method used
aggregation_options     = sum


# node bias options
# Initial biases are centered at zero, promoting balanced starting behavior
bias_init_mean          = 0.0

# Biases vary initially to help differentiate node responses early on
bias_init_stdev         = 1.0

# Keep biases within a large but finite range to prevent extreme outputs
bias_max_value          = 30.0

# Biases can't become overly negative, preserving numeric stability
bias_min_value          = -30.0

# Biases nudge gradually when mutated, allowing fine-tuning over time
bias_mutate_power       = 0.5

# Frequent bias mutations encourage constant refinement in node behavior
bias_mutate_rate        = 0.7

# Occasionally reset a bias entirely, allowing fresh starts in some nodes
bias_replace_rate       = 0.1


# genome compatibility options
# Differences in structure matter equally when forming species
compatibility_disjoint_coefficient = 1.0

# Weight differences have half the impact of structural differences
compatibility_weight_coefficient   = 0.5


# connection add/remove rates
# New connections appear often, helping the network explore more complex solutions
conn_add_prob           = 0.5

# Connections are also removed frequently, preventing bloated networks
conn_delete_prob        = 0.5


# connection enable options
# New connections start active, allowing them to influence outputs immediately
enabled_default         = True

# Rarely disable or re-enable connections, occasionally altering flow of information
enabled_mutate_rate     = 0.01


# No loops; the network flows forward from inputs to outputs for simplicity
feed_forward            = True

# Initially every input connects to each output, starting with a fully-wired mapping
initial_connection      = full


# node add/remove rates
# Adding nodes occasionally creates new processing steps and complexity
node_add_prob           = 0.2

# Removing nodes prunes complexity, focusing on the most useful pathways
node_delete_prob        = 0.2


# network parameters
# Start with no hidden nodes; complexity emerges through mutations over time
num_hidden              = 0

# The network sees three input signals (The bird's Y position, The height of the top & bottom pipe)
num_inputs              = 4

# The bird has two outputs(jumpp and high jump)
num_outputs             = 2


# node response options (mostly unused here)
# Responses start uniform; with no mutations, they remain constant
response_init_mean      = 1.0

# No variation in initial node response settings
response_init_stdev     = 0.0

# Bounds exist to avoid extreme node responses if they were used
response_max_value      = 30.0

# Lower bound on responses
response_min_value      = -30.0

# No step size for mutation; these are effectively disabled
response_mutate_power   = 0.0

# No response mutations occur
response_mutate_rate    = 0.0

# No response replacements occur
response_replace_rate   = 0.0


# connection weight options
# Start weights centered around zero for a neutral initial response
weight_init_mean        = 0.0

# Initial weight variations encourage different initial policies
weight_init_stdev       = 1.0

# Keep weights within a reasonable range to avoid saturation
weight_max_value        = 30

# Prevent extremely negative weights that could destabilize training
weight_min_value        = -30

# Adjust weights slightly on mutation, allowing subtle refinements
weight_mutate_power     = 0.5

# High mutation rate keeps the evolutionary search flexible and adaptive
weight_mutate_rate      = 0.8

# Occasionally reset a weight entirely, fostering new strategies
weight_replace_rate     = 0.1


[DefaultSpeciesSet]
# Genomes must be fairly similar to be considered the same species, promoting diversity
compatibility_threshold = 3.0


[DefaultStagnation]
# Species improvement is judged by their top performerâ€™s fitness
species_fitness_func = max

# After 20 generations without improvement, a species is removed
max_stagnation       = 20

# Keep the top 2 genomes in a species even if it's stagnating, preserving proven strategies
species_elitism      = 2


[DefaultReproduction]
# Always carry over the top 2 individuals to ensure the best solutions persist
elitism            = 2

# Only the top 20% in each species reproduce, maintaining a competitive environment
survival_threshold = 0.2
